package cc.dmji.website.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class BangumiExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public BangumiExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andBangumiIdIsNull() {
            addCriterion("bangumi_id is null");
            return (Criteria) this;
        }

        public Criteria andBangumiIdIsNotNull() {
            addCriterion("bangumi_id is not null");
            return (Criteria) this;
        }

        public Criteria andBangumiIdEqualTo(Integer value) {
            addCriterion("bangumi_id =", value, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdNotEqualTo(Integer value) {
            addCriterion("bangumi_id <>", value, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdGreaterThan(Integer value) {
            addCriterion("bangumi_id >", value, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("bangumi_id >=", value, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdLessThan(Integer value) {
            addCriterion("bangumi_id <", value, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdLessThanOrEqualTo(Integer value) {
            addCriterion("bangumi_id <=", value, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdIn(List<Integer> values) {
            addCriterion("bangumi_id in", values, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdNotIn(List<Integer> values) {
            addCriterion("bangumi_id not in", values, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdBetween(Integer value1, Integer value2) {
            addCriterion("bangumi_id between", value1, value2, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiIdNotBetween(Integer value1, Integer value2) {
            addCriterion("bangumi_id not between", value1, value2, "bangumiId");
            return (Criteria) this;
        }

        public Criteria andBangumiNameIsNull() {
            addCriterion("bangumi_name is null");
            return (Criteria) this;
        }

        public Criteria andBangumiNameIsNotNull() {
            addCriterion("bangumi_name is not null");
            return (Criteria) this;
        }

        public Criteria andBangumiNameEqualTo(String value) {
            addCriterion("bangumi_name =", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameNotEqualTo(String value) {
            addCriterion("bangumi_name <>", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameGreaterThan(String value) {
            addCriterion("bangumi_name >", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameGreaterThanOrEqualTo(String value) {
            addCriterion("bangumi_name >=", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameLessThan(String value) {
            addCriterion("bangumi_name <", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameLessThanOrEqualTo(String value) {
            addCriterion("bangumi_name <=", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameLike(String value) {
            addCriterion("bangumi_name like", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameNotLike(String value) {
            addCriterion("bangumi_name not like", value, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameIn(List<String> values) {
            addCriterion("bangumi_name in", values, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameNotIn(List<String> values) {
            addCriterion("bangumi_name not in", values, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameBetween(String value1, String value2) {
            addCriterion("bangumi_name between", value1, value2, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andBangumiNameNotBetween(String value1, String value2) {
            addCriterion("bangumi_name not between", value1, value2, "bangumiName");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalIsNull() {
            addCriterion("episode_total is null");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalIsNotNull() {
            addCriterion("episode_total is not null");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalEqualTo(Integer value) {
            addCriterion("episode_total =", value, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalNotEqualTo(Integer value) {
            addCriterion("episode_total <>", value, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalGreaterThan(Integer value) {
            addCriterion("episode_total >", value, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalGreaterThanOrEqualTo(Integer value) {
            addCriterion("episode_total >=", value, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalLessThan(Integer value) {
            addCriterion("episode_total <", value, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalLessThanOrEqualTo(Integer value) {
            addCriterion("episode_total <=", value, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalIn(List<Integer> values) {
            addCriterion("episode_total in", values, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalNotIn(List<Integer> values) {
            addCriterion("episode_total not in", values, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalBetween(Integer value1, Integer value2) {
            addCriterion("episode_total between", value1, value2, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andEpisodeTotalNotBetween(Integer value1, Integer value2) {
            addCriterion("episode_total not between", value1, value2, "episodeTotal");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNull() {
            addCriterion("modify_time is null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIsNotNull() {
            addCriterion("modify_time is not null");
            return (Criteria) this;
        }

        public Criteria andModifyTimeEqualTo(Date value) {
            addCriterion("modify_time =", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotEqualTo(Date value) {
            addCriterion("modify_time <>", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThan(Date value) {
            addCriterion("modify_time >", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("modify_time >=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThan(Date value) {
            addCriterion("modify_time <", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeLessThanOrEqualTo(Date value) {
            addCriterion("modify_time <=", value, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeIn(List<Date> values) {
            addCriterion("modify_time in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotIn(List<Date> values) {
            addCriterion("modify_time not in", values, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeBetween(Date value1, Date value2) {
            addCriterion("modify_time between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andModifyTimeNotBetween(Date value1, Date value2) {
            addCriterion("modify_time not between", value1, value2, "modifyTime");
            return (Criteria) this;
        }

        public Criteria andThumbIsNull() {
            addCriterion("thumb is null");
            return (Criteria) this;
        }

        public Criteria andThumbIsNotNull() {
            addCriterion("thumb is not null");
            return (Criteria) this;
        }

        public Criteria andThumbEqualTo(String value) {
            addCriterion("thumb =", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbNotEqualTo(String value) {
            addCriterion("thumb <>", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbGreaterThan(String value) {
            addCriterion("thumb >", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbGreaterThanOrEqualTo(String value) {
            addCriterion("thumb >=", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbLessThan(String value) {
            addCriterion("thumb <", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbLessThanOrEqualTo(String value) {
            addCriterion("thumb <=", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbLike(String value) {
            addCriterion("thumb like", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbNotLike(String value) {
            addCriterion("thumb not like", value, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbIn(List<String> values) {
            addCriterion("thumb in", values, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbNotIn(List<String> values) {
            addCriterion("thumb not in", values, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbBetween(String value1, String value2) {
            addCriterion("thumb between", value1, value2, "thumb");
            return (Criteria) this;
        }

        public Criteria andThumbNotBetween(String value1, String value2) {
            addCriterion("thumb not between", value1, value2, "thumb");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dm_bangumi
     *
     * @mbg.generated do_not_delete_during_merge Tue May 08 23:01:05 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dm_bangumi
     *
     * @mbg.generated Tue May 08 23:01:05 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}